{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { notification } from \"antd\";\nconst initialValues = {\n  name: \"\",\n  email: \"\",\n  message: \"\"\n};\nexport const useForm = validate => {\n  _s();\n  const [formState, setFormState] = useState({\n    values: {\n      ...initialValues\n    },\n    errors: {\n      ...initialValues\n    }\n  });\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const values = formState.values;\n    const errors = validate(values);\n    setFormState(prevState => ({\n      ...prevState,\n      errors\n    }));\n    const url = \"\"; // Fill in your API URL here\n\n    try {\n      if (Object.values(errors).every(error => error === \"\")) {\n        const response = await fetch(url, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(values)\n        });\n        if (!response.ok) {\n          notification[\"error\"]({\n            message: \"Error\",\n            description: \"There was an error sending your message, please try again later.\"\n          });\n        } else {\n          event.target.reset();\n          setFormState(() => ({\n            values: {\n              ...initialValues\n            },\n            errors: {\n              ...initialValues\n            }\n          }));\n          notification[\"success\"]({\n            message: \"Success\",\n            description: \"Your message has been sent!\"\n          });\n        }\n      }\n    } catch (error) {\n      notification[\"error\"]({\n        message: \"Error\",\n        description: \"Failed to submit form. Please try again later.\"\n      });\n    }\n  };\n  const handleChange = event => {\n    event.persist();\n    const {\n      name,\n      value\n    } = event.target;\n    setFormState(prevState => ({\n      ...prevState,\n      values: {\n        ...prevState.values,\n        [name]: value\n      },\n      errors: {\n        ...prevState.errors,\n        [name]: \"\"\n      }\n    }));\n  };\n  return {\n    handleChange,\n    handleSubmit,\n    values: formState.values,\n    errors: formState.errors\n  };\n};\n_s(useForm, \"cus+kMFlQcdcopu03X5R6a9ZN9I=\");","map":{"version":3,"names":["useState","notification","initialValues","name","email","message","useForm","validate","_s","formState","setFormState","values","errors","handleSubmit","event","preventDefault","prevState","url","Object","every","error","response","fetch","method","headers","body","JSON","stringify","ok","description","target","reset","handleChange","persist","value"],"sources":["/Users/umallem/Downloads/site2/src/common/utils/useForm.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { notification } from \"antd\";\r\n\r\ninterface IValues {\r\n  name: string;\r\n  email: string;\r\n  message: string;\r\n}\r\n\r\nconst initialValues: IValues = {\r\n  name: \"\",\r\n  email: \"\",\r\n  message: \"\",\r\n};\r\n\r\nexport const useForm = (validate: { (values: IValues): IValues }) => {\r\n  const [formState, setFormState] = useState<{\r\n    values: IValues;\r\n    errors: IValues;\r\n  }>({\r\n    values: { ...initialValues },\r\n    errors: { ...initialValues },\r\n  });\r\n\r\n  const handleSubmit = async (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const values = formState.values;\r\n    const errors = validate(values);\r\n    setFormState((prevState) => ({ ...prevState, errors }));\r\n\r\n    const url = \"\"; // Fill in your API URL here\r\n\r\n    try {\r\n      if (Object.values(errors).every((error) => error === \"\")) {\r\n        const response = await fetch(url, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(values),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          notification[\"error\"]({\r\n            message: \"Error\",\r\n            description:\r\n              \"There was an error sending your message, please try again later.\",\r\n          });\r\n        } else {\r\n          event.target.reset();\r\n          setFormState(() => ({\r\n            values: { ...initialValues },\r\n            errors: { ...initialValues },\r\n          }));\r\n\r\n          notification[\"success\"]({\r\n            message: \"Success\",\r\n            description: \"Your message has been sent!\",\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: \"Error\",\r\n        description: \"Failed to submit form. Please try again later.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    event.persist();\r\n    const { name, value } = event.target;\r\n    setFormState((prevState) => ({\r\n      ...prevState,\r\n      values: {\r\n        ...prevState.values,\r\n        [name]: value,\r\n      },\r\n      errors: {\r\n        ...prevState.errors,\r\n        [name]: \"\",\r\n      },\r\n    }));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values: formState.values,\r\n    errors: formState.errors,\r\n  };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,YAAY,QAAQ,MAAM;AAQnC,MAAMC,aAAsB,GAAG;EAC7BC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,OAAO,GAAIC,QAAwC,IAAK;EAAAC,EAAA;EACnE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAGvC;IACDW,MAAM,EAAE;MAAE,GAAGT;IAAc,CAAC;IAC5BU,MAAM,EAAE;MAAE,GAAGV;IAAc;EAC7B,CAAC,CAAC;EAEF,MAAMW,YAAY,GAAG,MAAOC,KAAyC,IAAK;IACxEA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMJ,MAAM,GAAGF,SAAS,CAACE,MAAM;IAC/B,MAAMC,MAAM,GAAGL,QAAQ,CAACI,MAAM,CAAC;IAC/BD,YAAY,CAAEM,SAAS,KAAM;MAAE,GAAGA,SAAS;MAAEJ;IAAO,CAAC,CAAC,CAAC;IAEvD,MAAMK,GAAG,GAAG,EAAE,CAAC,CAAC;;IAEhB,IAAI;MACF,IAAIC,MAAM,CAACP,MAAM,CAACC,MAAM,CAAC,CAACO,KAAK,CAAEC,KAAK,IAAKA,KAAK,KAAK,EAAE,CAAC,EAAE;QACxD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAE;UAChCM,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAChB,MAAM;QAC7B,CAAC,CAAC;QAEF,IAAI,CAACU,QAAQ,CAACO,EAAE,EAAE;UAChB3B,YAAY,CAAC,OAAO,CAAC,CAAC;YACpBI,OAAO,EAAE,OAAO;YAChBwB,WAAW,EACT;UACJ,CAAC,CAAC;QACJ,CAAC,MAAM;UACLf,KAAK,CAACgB,MAAM,CAACC,KAAK,CAAC,CAAC;UACpBrB,YAAY,CAAC,OAAO;YAClBC,MAAM,EAAE;cAAE,GAAGT;YAAc,CAAC;YAC5BU,MAAM,EAAE;cAAE,GAAGV;YAAc;UAC7B,CAAC,CAAC,CAAC;UAEHD,YAAY,CAAC,SAAS,CAAC,CAAC;YACtBI,OAAO,EAAE,SAAS;YAClBwB,WAAW,EAAE;UACf,CAAC,CAAC;QACJ;MACF;IACF,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdnB,YAAY,CAAC,OAAO,CAAC,CAAC;QACpBI,OAAO,EAAE,OAAO;QAChBwB,WAAW,EAAE;MACf,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMG,YAAY,GAChBlB,KAAgE,IAC7D;IACHA,KAAK,CAACmB,OAAO,CAAC,CAAC;IACf,MAAM;MAAE9B,IAAI;MAAE+B;IAAM,CAAC,GAAGpB,KAAK,CAACgB,MAAM;IACpCpB,YAAY,CAAEM,SAAS,KAAM;MAC3B,GAAGA,SAAS;MACZL,MAAM,EAAE;QACN,GAAGK,SAAS,CAACL,MAAM;QACnB,CAACR,IAAI,GAAG+B;MACV,CAAC;MACDtB,MAAM,EAAE;QACN,GAAGI,SAAS,CAACJ,MAAM;QACnB,CAACT,IAAI,GAAG;MACV;IACF,CAAC,CAAC,CAAC;EACL,CAAC;EAED,OAAO;IACL6B,YAAY;IACZnB,YAAY;IACZF,MAAM,EAAEF,SAAS,CAACE,MAAM;IACxBC,MAAM,EAAEH,SAAS,CAACG;EACpB,CAAC;AACH,CAAC;AAACJ,EAAA,CA9EWF,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}